@startuml "melihat agenda"

    title "Melihat Agenda"
    hide footbox
    skinparam  shadowing false

    skinparam sequence {    
        ArrowThickness 1.5
        ActorFontName Century Gothic
        ActorBackgroundColor  #C6EFFC
        ArrowFontName Century Gothic
        ParticipantBorderThickness 1.5
        ParticipantBackgroundColor #C6EFFC
    }

    actor "Penyelenggara Event" as eo 
    participant "__:AgendaScreen__" as viewAgenda
    participant "__:AgendaController__" as controllerAgenda
    participant "__:ViewEventListApiResponseModel__" as modelEventListClient
    participant "__:ApiEvent__" as apiEvent
    participant "__:ApiUtil__" as apiUtil
    participant "__:EventController__" as controllerEvent
    participant "__:EventService__" as serviceEvent
    participant "__:EventRepository__" as repositoryEvent
    participant "__:ViewEventListApiResponse__" as modelEventList

    
    eo -> viewAgenda: Mengklik menu agenda
    activate eo
    activate viewAgenda 

    viewAgenda -> controllerAgenda: .loadEventSchedule()
    activate controllerAgenda

    controllerAgenda -> apiEvent: .getEvent()
    activate apiEvent

    apiEvent -> apiUtil: .apiRequestGet(endpoint)
    activate apiUtil

    apiUtil -> controllerEvent: HTTP Request
    activate controllerEvent

    controllerEvent -> serviceEvent: .getEvents()
    activate serviceEvent 

    serviceEvent -> repositoryEvent: .findAllByOrderIdAsc()
    activate repositoryEvent
    repositoryEvent --> serviceEvent: eventList
    deactivate repositoryEvent

    serviceEvent -> modelEventList: ViewEventListApiResponse()
    activate modelEventList 
    modelEventList --> serviceEvent: newEvent
    deactivate modelEventList

    serviceEvent -> serviceEvent: .setData(data)
    activate serviceEvent 
    deactivate serviceEvent 

    loop 
        serviceEvent -> serviceEvent: .add(data)
        activate serviceEvent 
        deactivate serviceEvent 
    end 

    serviceEvent --> controllerEvent: ViewEventListApiResponse
    deactivate serviceEvent 

    controllerEvent --> apiUtil: JSON Response
    deactivate controllerEvent

    apiUtil --> apiEvent: response
    deactivate apiUtil

    apiEvent --> controllerAgenda: response
    deactivate apiEvent 

    controllerAgenda -> modelEventListClient: .fromJson(response)
    activate modelEventListClient
    modelEventListClient --> controllerAgenda: eventListData
    deactivate modelEventListClient

    loop 
        controllerAgenda -> controllerAgenda: .add(NeatCleanCalendarEvent)
        activate controllerAgenda
        deactivate controllerAgenda
    end 

    controllerAgenda --> viewAgenda: build calendar view and mapping event
    deactivate controllerAgenda

    viewAgenda --> eo: Menampilkan data event dalam bentuk calendar view
    deactivate viewAgenda
@enduml