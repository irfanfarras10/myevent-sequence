@startuml "melihat daftar tamu"

    title "Melihat Daftar Tamu"
    hide footbox
    skinparam  shadowing false

    skinparam sequence {    
        ArrowThickness 1.5
        ActorFontName Century Gothic
        ActorBackgroundColor  #C6EFFC
        ArrowFontName Century Gothic
        ParticipantBorderThickness 1.5
        ParticipantBackgroundColor #C6EFFC
    }

    actor "Penyelenggara Event" as eo
    participant "__:GuestScreen__" as viewGuest
    participant "__:GuestController__" as controllerGuest
    participant "__:ViewEventDetailApiResponseModel__" as modelResponse
    participant "__:ViewGuestListApiResponseModel__" as modelGuestReponseClient
    participant "__:ApiEvent__" as apiEvent
    participant "__:ApiGuest__" as apiGuest
    participant "__:ApiUtil__" as apiUtil
    participant "__:EventController__" as controllerEventBackend
    participant "__:GuestController__" as controllerGuestBackend
    participant "__:EventService__" as serviceEvent 
    participant "__:GuestService__" as serviceGuest
    participant "__:ViewEventApiResponse__" as modelApiResponse
    participant "__:ViewEventGuestListApiResponse__" as modelGuestResponse
    participant "__:EventRepository__" as repositoryEvent
    participant "__:EventGuestRepository__" as repositoryGuest

    eo -> viewGuest: Mengklik daftar item tamu
    activate eo
    activate viewGuest

    viewGuest -> controllerGuest: .loadData()
    activate controllerGuest

    controllerGuest -> apiEvent: .getEventDetail(eventId)
    activate apiEvent

    apiEvent -> apiUtil: .apiRequestGet(endpoint)
    activate apiUtil

    apiUtil -> controllerEventBackend: HTTP Request
    activate controllerEventBackend

    controllerEventBackend -> serviceEvent: .getDetailEvent(id)
    activate serviceEvent 

    serviceEvent -> modelApiResponse: .ViewEvenApiResponse()
    activate modelApiResponse
    modelApiResponse --> serviceEvent: newEvent
    deactivate modelApiResponse

    serviceEvent -> repositoryEvent: .findById(id)
    activate repositoryEvent
    repositoryEvent --> serviceEvent: eventData
    deactivate repositoryEvent

    serviceEvent -> serviceEvent: .set(data)
    activate serviceEvent
    deactivate serviceEvent 

    serviceEvent --> controllerEventBackend: newEvent
    deactivate serviceEvent

    controllerEventBackend --> apiUtil: JSON Response
    deactivate controllerEventBackend

    apiUtil --> apiEvent: response
    deactivate apiUtil

    apiEvent --> controllerGuest: response
    deactivate apiEvent

    controllerGuest -> modelResponse: .fromJson(response)
    activate modelResponse
    modelResponse --> controllerGuest: eventData
    deactivate modelResponse

    controllerGuest -> apiGuest: .getGuest(eventId)
    activate apiGuest

    apiGuest -> apiUtil: .apiRequestGet(endpoint)
    activate apiUtil

    apiUtil -> controllerGuestBackend: HTTP Request
    activate controllerGuestBackend

    controllerGuestBackend -> serviceGuest: .getGuestDetail(eventId)
    activate serviceGuest

    serviceGuest -> repositoryGuest: .findByEvent(eventId)
    activate repositoryGuest
    repositoryGuest --> serviceGuest: guestEvent
    deactivate 

    serviceGuest -> modelGuestResponse: .ViewEventGuestApiResponse()
    activate modelGuestResponse
    modelGuestResponse --> serviceGuest: guestEvent
    deactivate 

    serviceGuest -> serviceGuest: .setListGuest(guestEvent)
    activate serviceGuest
    deactivate 

    serviceGuest --> controllerGuestBackend: ViewEventGuestListApiResponse
    deactivate serviceGuest

    controllerGuestBackend --> apiUtil: ViewEventGuestListApiResponse
    deactivate controllerGuestBackend

    apiUtil -> apiGuest: JSON Response
    deactivate apiUtil

    apiGuest --> controllerGuest: response
    deactivate apiGuest

    controllerGuest -> modelGuestReponseClient: .fromJson(response)
    activate modelGuestReponseClient
    modelGuestReponseClient --> controllerGuest: data
    deactivate 

    controllerGuest --> viewGuest: guestData

    viewGuest --> eo: Menampilkan daftar tamu


@enduml 